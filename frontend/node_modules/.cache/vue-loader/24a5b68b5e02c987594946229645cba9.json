{"remainingRequest":"/home/bdafflon/Documents/PE/PE-git2/GMP-PE/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bdafflon/Documents/PE/PE-git2/GMP-PE/frontend/src/components/ChatComponent.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/bdafflon/Documents/PE/PE-git2/GMP-PE/frontend/src/components/ChatComponent.vue","mtime":1604344206536},{"path":"/home/bdafflon/Documents/PE/PE-git2/GMP-PE/frontend/node_modules/css-loader/dist/cjs.js","mtime":1604307644799},{"path":"/home/bdafflon/Documents/PE/PE-git2/GMP-PE/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1604307646123},{"path":"/home/bdafflon/Documents/PE/PE-git2/GMP-PE/frontend/node_modules/postcss-loader/src/index.js","mtime":1604307645611},{"path":"/home/bdafflon/Documents/PE/PE-git2/GMP-PE/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1604307645931},{"path":"/home/bdafflon/Documents/PE/PE-git2/GMP-PE/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1604307644635},{"path":"/home/bdafflon/Documents/PE/PE-git2/GMP-PE/frontend/node_modules/vue-loader/lib/index.js","mtime":1604307646123}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgogICAKICBAaW1wb3J0ICIuLi9hc3NldHMvY3VzdG9tLnNjc3MiOwogIEBpbXBvcnQgIm5vZGVfbW9kdWxlcy9ib290c3RyYXAvc2Nzcy9ib290c3RyYXAuc2NzcyI7CiAgQGltcG9ydCAiLi4vYXNzZXRzL3NiLWFkbWluLTIubWluLmNzcyI7CgoKLmNoYXQtYXJlYSB7Ci8qICAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsgKi8KICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICBtYXgtaGVpZ2h0OiAzMHZoOwogIHBhZGRpbmc6IDFlbTsKICBvdmVyZmxvdzogYXV0bzsKICAgCiAgbWFyZ2luOiAwIGF1dG8gMmVtIGF1dG87CiAgfQoubWVzc2FnZSB7CiAgd2lkdGg6IDUwJTsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIHBhZGRpbmc6IC41ZW07Ci8qICAgbWFyZ2luLWJvdHRvbTogLjVlbTsgKi8KICBmb250LXNpemU6IC44ZW07Cn0KLm1lc3NhZ2Utb3V0IHsKICBiYWNrZ3JvdW5kOiAjNDA3RkZGOwogIGNvbG9yOiB3aGl0ZTsKICBtYXJnaW4tbGVmdDogNTAlOwogIHRleHQtYWxpZ246IHJpZ2h0Owp9Ci5tZXNzYWdlLWluIHsKICBiYWNrZ3JvdW5kOiAjRjFGMEYwOwogIGNvbG9yOiBibGFjazsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Ci5jaGF0LWlucHV0cyB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0K"},{"version":3,"sources":["ChatComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n      <section ref=\"chatArea\" class=\"chat-area\" id=\"chatroom\" >\n    <p v-for=\"message in messages\" :key=\"message.id_action\" class=\"message\" :class=\"{ 'message-out': message.id_etudiant === user.id, 'message-in': message.id_etudiant !== user.id }\">\n      {{ message.action }}\n    </p>\n  </section>\n   <section class=\"\">\n\n    \n\n    <form @submit.prevent=\"sendMessage('out')\" id=\"person2-form\">\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n             <input v-model=\"youMessage\" type=\"text\" id=\"person2-input\" class=\"form-control\" placeholder=\"Message\" required autofocus>\n          </div>\n          <div class=\"col-sm-4\">\n            <button class=\"btn  btn-primary btn-block\" type=\"submit\">Envoyer</button>\n          </div>\n        </div>\n      \n        \n      \n    </form>\n  </section>\n</div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport axios from 'axios';\n\nexport default {\n    name:\"Chat\",\n    props: ['candidature'],\n    watch: {\n    // This would be called anytime the value of title changes\n      candidature(newValue, oldValue) {\n        console.debug(oldValue)\n        this.candidature = newValue\n        this.clearAllMessages()\n        this.fetchData()\n    }\n  },\n    data() {\n      return {\n        bobMessage: '',\n        youMessage: '',\n        messages: [\n          { \n            id:1,\n            body: 'Welcome to the chat, I\\'m Bob!',\n            author: 'bob'\n          },\n          {\n            id:2,\n            body: 'Thank you Bob',\n            author: 1\n          },\n          {\n            id:3,\n            body: 'You\\'re most welcome',\n            author: 'bob'\n          }\n        ]\n      }\n    },\n    computed: {\n      ...mapState([\n        'loggingIn',\n        'loginError',\n        'accessToken',\n        'logged',\n        'user'\n      ])\n    },\n    created () {\n      this.fetchData()\n    },\n  methods: {\n    scrollToEnd: function() {    \t\n      \n      var container = document.querySelector(\"#chatroom\");\n      container.scrollTop = container.scrollHeight;\n    },\n    sendMessage(direction) {\n      console.debug(this.messages)\n      if (!this.youMessage && !this.bobMessage) {\n        return\n      }\n      if (direction === 'out') {\n        \n\n        this.addData(this.youMessage)\n        this.youMessage = ''\n      \n      } else {\n        alert('something went wrong')\n      }\n      \n      this.$nextTick(() => this.scrollToEnd());\n    },\n    clearAllMessages() {\n      this.messages = []\n    }\n  ,\n  addData(message){\n    console.debug(message)\n    axios({\n            method: 'post',\n            url: 'http://127.0.0.1:5000/api/actionpe/registration',\n            data: {\n              action:message,\n              id_etudiant:this.user.id,\n              id_candidature:this.candidature.id_candidature\n            },\n            auth: {\n              username: this.user.mail,\n              password: this.user.pwd\n            }\n        })\n      .then(response => {\n          \n         this.messages.push({id_action:response.id_action, action:message,\n              id_etudiant:this.user.id,\n              id_candidature:this.candidature.id_candidature})\n         \n         \n          \n      })\n      .catch(error => {\n        console.debug(error)\n      })\n  },\n  fetchData () {\n          \n      \n      axios({\n            method: 'get',\n            url: 'http://127.0.0.1:5000/api/actionpe/'+this.candidature.id_candidature,\n            auth: {\n              username: this.user.mail,\n              password: this.user.pwd\n            }\n        })\n      .then(response => {\n          \n         this.messages=response.data\n         this.candidature.ap=0\n         \n         \n          \n      })\n      .catch(error => {\n        console.debug(error)\n      })\n\n    }\n  }\n\n}\n</script>\n\n<style lang=\"scss\">\n   \n  @import \"../assets/custom.scss\";\n  @import \"node_modules/bootstrap/scss/bootstrap.scss\";\n  @import \"../assets/sb-admin-2.min.css\";\n\n\n.chat-area {\n/*   border: 1px solid #ccc; */\n  background: white;\n  max-height: 30vh;\n  padding: 1em;\n  overflow: auto;\n   \n  margin: 0 auto 2em auto;\n  }\n.message {\n  width: 50%;\n  border-radius: 10px;\n  padding: .5em;\n/*   margin-bottom: .5em; */\n  font-size: .8em;\n}\n.message-out {\n  background: #407FFF;\n  color: white;\n  margin-left: 50%;\n  text-align: right;\n}\n.message-in {\n  background: #F1F0F0;\n  color: black;\n  text-align: left;\n}\n.chat-inputs {\n  display: flex;\n  justify-content: space-between;\n}\n</style>"]}]}