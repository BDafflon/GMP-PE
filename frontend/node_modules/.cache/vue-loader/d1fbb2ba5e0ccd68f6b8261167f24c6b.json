{"remainingRequest":"/home/bdafflon/Documents/PE/GMP-PE/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bdafflon/Documents/PE/GMP-PE/frontend/src/components/ContentAdmin.vue?vue&type=template&id=516d88f4&","dependencies":[{"path":"/home/bdafflon/Documents/PE/GMP-PE/frontend/src/components/ContentAdmin.vue","mtime":1604652114815},{"path":"/home/bdafflon/Documents/PE/GMP-PE/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1604581624534},{"path":"/home/bdafflon/Documents/PE/GMP-PE/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1604581626534},{"path":"/home/bdafflon/Documents/PE/GMP-PE/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1604581624534},{"path":"/home/bdafflon/Documents/PE/GMP-PE/frontend/node_modules/vue-loader/lib/index.js","mtime":1604581626534}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}